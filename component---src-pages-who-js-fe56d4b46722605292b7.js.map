{"version":3,"file":"component---src-pages-who-js-fe56d4b46722605292b7.js","mappings":"sLAIMA,EAAQ,CACZ,CACEC,KAAM,OACNC,IAAK,QAEP,CACED,KAAM,iBACNC,IAAK,cAEP,CACED,KAAM,UACNC,IAAK,aAIHC,EAAS,SAAC,GAAkB,IACxBC,EADuB,EAAfC,SACRD,SACR,OACE,8BACgB,MAAbA,GACC,uBAAKE,UAAU,QACb,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KAAT,wBAGJ,2BACGR,EAAMS,KAAI,SAACC,EAAMC,GAAP,OACT,gBAAC,WAAD,CAAgBC,IAAKF,EAAKR,KACxB,gBAAC,EAAAK,KAAD,CAAMC,GAAIE,EAAKR,IAAKI,UAAU,YAC5B,uBAAKA,UAAU,oBAAoBI,EAAKT,OAE1C,wBAAMK,UAAU,YACbK,IAAMX,EAAMa,OAAS,GAAK,wCANtB,KAalB,EAODV,EAAOW,aAAe,CACpBC,UAAU,IAGZ,QCtBA,EAvBe,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUX,EAAe,EAAfA,SAC1B,OACE,gCACE,uBAAKC,UAAU,cACb,uBAAKA,UAAU,YAEjB,uBAAKA,UAAU,QACb,gBAAC,EAAD,CAAQD,SAAUA,IACjBW,EACD,8BACE,+BAAW,IAAIC,MAAOC,cAAtB,wBACA,8DAKT,C,+CCpBD,SAASC,EAAT,GAAgD,IAAD,IAAhCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,MAAOL,EAAY,EAAZA,SACzBM,GAASC,EAAAA,EAAAA,gBAAe,YAAxBD,KAcFE,EAAkBJ,GAAeE,EAAKG,aAAaL,YACnDM,EAAY,UAAGJ,EAAKG,oBAAR,aAAG,EAAmBJ,MAExC,OACE,gCACE,6BAAQK,EAAkBL,EAAN,MAAiBK,EAAiBL,GACtD,wBAAMM,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASP,IACnC,wBAAMQ,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAAS,UAAAN,EAAKG,oBAAL,eAAmBK,SAAnB,KACtC,wBAAMH,KAAK,gBAAgBC,QAASP,IACpC,wBAAMM,KAAK,sBAAsBC,QAASJ,IACzCR,EAGN,CAEDG,EAAIL,aAAe,CACjBM,YAAY,IAQd,K,kGCvBaW,EAAO,kBAClB,gBAAC,IAAD,CACEV,MAAM,OACND,YAAY,kDAHI,EAOpB,UA1BgB,SAAAY,GAAK,OACnB,gBAAC,IAAD,CAAQ3B,SAAU2B,EAAM3B,UACtB,4BACE,2BAASC,UAAU,oBACjB,kCACA,oDACA,sCACY,qBAAG2B,KAAK,+BAAR,oBAEZ,uDACA,0DACA,gEACA,oDACA,4EAba,C","sources":["webpack://nova-larkin-schrage/./src/components/header.js","webpack://nova-larkin-schrage/./src/components/layout.js","webpack://nova-larkin-schrage/./src/components/seo.js","webpack://nova-larkin-schrage/./src/pages/who.js"],"sourcesContent":["import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nconst links = [\n  {\n    text: \"who?\",\n    url: \"/who\",\n  },\n  {\n    text: \"published work\",\n    url: \"/published\",\n  },\n  {\n    text: \"connect\",\n    url: \"/connect\",\n  },\n]\n\nconst Header = ({ location }) => {\n  const { pathname } = location\n  return (\n    <header>\n      {pathname !== \"/\" && (\n        <div className=\"home\">\n          <Link to=\"/\">Nova Larkin Schrage</Link>\n        </div>\n      )}\n      <nav>\n        {links.map((link, i) => (\n          <React.Fragment key={link.url}>\n            <Link to={link.url} className=\"nav-link\">\n              <div className=\"nav-link-wrapper\">{link.text}</div>\n            </Link>\n            <span className=\"nav-dots\">\n              {i !== links.length - 1 && <> Â· </>}\n            </span>\n          </React.Fragment>\n        ))}\n      </nav>\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  location: PropTypes.object.isRequired,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import \"@fontsource/adamina\"\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children, location }) => {\n  return (\n    <>\n      <div className=\"background\">\n        <div className=\"nebula\"></div>\n      </div>\n      <div className=\"main\">\n        <Header location={location} />\n        {children}\n        <footer>\n          <p>&#169; {new Date().getFullYear()} Nova Larkin Schrage</p>\n          <p>statements not approved by NASA</p>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  location: PropTypes.object.isRequired,\n}\n\nexport default Layout\n","import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst WhoPage = props => (\n  <Layout location={props.location}>\n    <main>\n      <article className=\"memphis-longhand\">\n        <h1>who?</h1>\n        <p>what: mad disabled poet</p>\n        <p>\n          anaphora: <a href=\"https://en.pronouns.page/co\">co/cos pronouns</a>\n        </p>\n        <p>gender: trans & non-binary</p>\n        <p>from: middle of turtle island</p>\n        <p>ancestrally from: germany & belgium</p>\n        <p>living: with difficulty</p>\n        <p>current location: west coast of turtle island</p>\n      </article>\n    </main>\n  </Layout>\n)\n\nexport const Head = () => (\n  <Seo\n    title=\"who?\"\n    description=\"who is Nova Larkin Schrage? click to find out!\"\n  />\n)\n\nexport default WhoPage\n"],"names":["links","text","url","Header","pathname","location","className","Link","to","map","link","i","key","length","defaultProps","siteTitle","children","Date","getFullYear","Seo","description","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author","Head","props","href"],"sourceRoot":""}