{"version":3,"file":"component---src-pages-connect-js-49036e4cefbc68518523.js","mappings":"kPA6GA,EA1GoB,WAClB,OAA8BA,EAAAA,EAAAA,IAAQ,YAA/BC,EAAP,KAAcC,EAAd,KACA,OAAID,EAAME,UACD,yCAGP,uBAAKC,UAAU,cACb,wBAAMC,SAAUH,GACd,uBAAKE,UAAU,WACb,uBAAKA,UAAU,YACb,qCACO,2BACL,yBAAOE,KAAK,OAAOC,KAAK,SACxB,gBAAC,KAAD,CACEC,OAAO,OACPC,MAAM,OACNC,OAAQT,EAAMS,WAIpB,uBAAKN,UAAU,YACb,yCACW,2BACT,yBAAOE,KAAK,OAAOC,KAAK,aACxB,gBAAC,KAAD,CACEC,OAAO,WACPC,MAAM,WACNC,OAAQT,EAAMS,YAMtB,uBAAKN,UAAU,WACb,uBAAKA,UAAU,YACb,sCACQ,2BACN,yBAAOE,KAAK,QAAQC,KAAK,UACzB,gBAAC,KAAD,CACEC,OAAO,QACPC,MAAM,QACNC,OAAQT,EAAMS,WAIpB,uBAAKN,UAAU,YACb,wCACU,2BACR,yBAAOE,KAAK,OAAOC,KAAK,YACxB,gBAAC,KAAD,CACEC,OAAO,UACPC,MAAM,UACNC,OAAQT,EAAMS,YAMtB,uBAAKN,UAAU,WACb,uBAAKA,UAAU,YACb,wCACU,2BACR,4BAAUG,KAAK,YACf,gBAAC,KAAD,CACEC,OAAO,UACPC,MAAM,UACNC,OAAQT,EAAMS,YAMtB,uBAAKN,UAAU,WACb,uBAAKA,UAAU,YACb,4CACc,2BACZ,yBAAOE,KAAK,OAAOC,KAAK,UAAUH,UAAU,SAC5C,gBAAC,KAAD,CACEI,OAAO,cACPC,MAAM,UACNC,OAAQT,EAAMS,YAMtB,uBAAKN,UAAU,iBACb,uBAAKA,UAAU,YACb,0BAAQE,KAAK,SAASK,SAAUV,EAAMW,YAAtC,yCAQX,EC/DD,EAjCsB,WACpB,OAA8BZ,EAAAA,EAAAA,IAAQ,WAAY,CAChDa,KAAM,CAAEC,QAAS,+CADZb,EAAP,KAAcC,EAAd,KAGA,OAAID,EAAME,UACD,0CAGP,uBAAKC,UAAU,cACb,wBAAMC,SAAUH,GACd,uBAAKE,UAAU,WACb,uBAAKA,UAAU,YACb,6CAEE,yBAAOE,KAAK,QAAQC,KAAK,UACzB,gBAAC,KAAD,CACEC,OAAO,QACPC,MAAM,QACNC,OAAQT,EAAMS,WAKpB,uBAAKN,UAAU,YACb,0BAAQE,KAAK,SAASK,SAAUV,EAAMW,YAAtC,aAQX,ECeYG,EAAO,kBAClB,gBAAC,IAAD,CAAKC,MAAM,UAAUC,YAAY,4CADf,EAIpB,EA/CoB,SAAAC,GAAK,OACvB,gBAAC,IAAD,CAAQC,SAAUD,EAAMC,UACtB,uBAAKf,UAAU,QACb,2BAASA,UAAU,oBACjB,qCAEA,uBAAKA,UAAU,0BACb,uBAAKgB,MAAM,QACT,yKAGc,4BAEd,+MAKA,0FACgE,qBAAGC,KAAK,gBAAR,aADhE,kBAKF,gBAAC,EAAD,OAGF,2BAEA,uBAAKjB,UAAU,eACb,uBAAKgB,MAAM,QACT,wJAMF,gBAAC,EAAD,SApCe,C","sources":["webpack://nova-larkin-schrage/./src/components/contact_form.js","webpack://nova-larkin-schrage/./src/components/email_list_form.js","webpack://nova-larkin-schrage/./src/pages/connect.js"],"sourcesContent":["import React from \"react\"\nimport { useForm, ValidationError } from \"@formspree/react\"\n\nconst ContactForm = () => {\n  const [state, handleSubmit] = useForm(\"xaykydpr\")\n  if (state.succeeded) {\n    return <p>thank you :3</p>\n  }\n  return (\n    <div className=\"collection\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"formRow\">\n          <div className=\"formItem\">\n            <label>\n              Name <br />\n              <input type=\"text\" name=\"name\" />\n              <ValidationError\n                prefix=\"Name\"\n                field=\"name\"\n                errors={state.errors}\n              />\n            </label>\n          </div>\n          <div className=\"formItem\">\n            <label>\n              Pronouns <br />\n              <input type=\"text\" name=\"pronouns\" />\n              <ValidationError\n                prefix=\"Pronouns\"\n                field=\"pronouns\"\n                errors={state.errors}\n              />\n            </label>\n          </div>\n        </div>\n\n        <div className=\"formRow\">\n          <div className=\"formItem\">\n            <label>\n              Email <br />\n              <input type=\"email\" name=\"email\" />\n              <ValidationError\n                prefix=\"Email\"\n                field=\"email\"\n                errors={state.errors}\n              />\n            </label>\n          </div>\n          <div className=\"formItem\">\n            <label>\n              Subject <br />\n              <input type=\"text\" name=\"subject\" />\n              <ValidationError\n                prefix=\"Subject\"\n                field=\"subject\"\n                errors={state.errors}\n              />\n            </label>\n          </div>\n        </div>\n\n        <div className=\"formRow\">\n          <div className=\"formItem\">\n            <label>\n              Message <br />\n              <textarea name=\"message\" />\n              <ValidationError\n                prefix=\"Message\"\n                field=\"message\"\n                errors={state.errors}\n              />\n            </label>\n          </div>\n        </div>\n\n        <div className=\"formRow\">\n          <div className=\"formItem\">\n            <label>\n              Cat Picture <br />\n              <input type=\"text\" name=\"cat_pic\" className=\"full\" />\n              <ValidationError\n                prefix=\"Cat Picture\"\n                field=\"cat_pic\"\n                errors={state.errors}\n              />\n            </label>\n          </div>\n        </div>\n\n        <div className=\"formButtonRow\">\n          <div className=\"formItem\">\n            <button type=\"submit\" disabled={state.submitting}>\n              i promise that this is not a curse\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  )\n}\n\n/*\nI am contacting you about:\npoetry\nstar repair\npay/rate transparencyx\nan image of a cat on the internet\n*/\n\nexport default ContactForm\n","import React from \"react\"\nimport { useForm, ValidationError } from \"@formspree/react\"\n\nconst EmailListForm = () => {\n  const [state, handleSubmit] = useForm(\"xoqbvrrv\", {\n    data: { subject: \"a person wants to join the email list! <3\" },\n  })\n  if (state.succeeded) {\n    return <p>thank you! :3</p>\n  }\n  return (\n    <div className=\"collection\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"formRow\">\n          <div className=\"formItem\">\n            <label>\n              Email Address\n              <input type=\"email\" name=\"email\" />\n              <ValidationError\n                prefix=\"Email\"\n                field=\"email\"\n                errors={state.errors}\n              />\n            </label>\n          </div>\n\n          <div className=\"formItem\">\n            <button type=\"submit\" disabled={state.submitting}>\n              submit\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default EmailListForm\n","import * as React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport ContactForm from \"../components/contact_form\"\nimport EmailListForm from \"../components/email_list_form\"\n\nconst ConnectPage = props => (\n  <Layout location={props.location}>\n    <div className=\"main\">\n      <article className=\"memphis-longhand\">\n        <h1>Connect</h1>\n\n        <div className=\"displayForm rowReverse\">\n          <div class=\"text\">\n            <p>\n              If you would like to receive email updates whenever I publish a\n              poem, consider subscribing to the email list that I use for this\n              purpose! :) <br />\n            </p>\n            <p>\n              You will not receive a confirmation email (sorry, very low tech right now!).\n              If you receive a \"thank you\" message on this page, then your subscription was\n              processed successfully.\n            </p>\n            <p>\n              If you would like to unsubscribe, please fill out the form on <a href=\"/unsubscribe\">this page</a> at any time.\n            </p>\n          </div>\n\n          <EmailListForm />\n        </div>\n\n        <hr />\n\n        <div className=\"displayForm\">\n          <div class=\"text\">\n            <p>\n              Social media is cursed. It is also not permitted in space. If you\n              would like to contact me, please use the following form.\n            </p>\n          </div>\n\n          <ContactForm />\n        </div>\n      </article>\n    </div>\n  </Layout>\n)\n\nexport const Head = () => (\n  <Seo title=\"connect\" description=\"Send me a message or join my email list!\" />\n)\n\nexport default ConnectPage\n"],"names":["useForm","state","handleSubmit","succeeded","className","onSubmit","type","name","prefix","field","errors","disabled","submitting","data","subject","Head","title","description","props","location","class","href"],"sourceRoot":""}