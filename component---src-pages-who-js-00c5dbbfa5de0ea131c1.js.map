{"version":3,"file":"component---src-pages-who-js-00c5dbbfa5de0ea131c1.js","mappings":"sLAIMA,EAAQ,CACZ,CACEC,KAAM,OACNC,IAAK,QAEP,CACED,KAAM,iBACNC,IAAK,cAEP,CACED,KAAM,UACNC,IAAK,aAIHC,EAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAaD,EAAbC,SAIN,OAHIA,EAASC,SAAS,MAAQD,EAASE,OAAS,IAC9CF,EAAWA,EAASG,UAAU,EAAGH,EAASE,OAAS,IAGnD,8BACgB,MAAbF,GACC,uBAAKI,UAAU,QACb,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KAAT,wBAGJ,2BACGX,EAAMY,KAAI,SAACC,EAAMC,GAAP,OACT,gBAAC,WAAD,CAAgBC,IAAKF,EAAKX,KACxB,gBAAC,EAAAQ,KAAD,CACEC,GAAIE,EAAKX,IACTO,UAAU,WACVO,YAAaX,IAAaD,GAAW,QAErC,uBAAKK,UAAU,oBAAoBI,EAAKZ,OAE1C,wBAAMQ,UAAU,YACbK,IAAMd,EAAMO,OAAS,GAAK,wCAVtB,KAiBlB,EAODJ,EAAOc,aAAe,CACpBC,UAAU,IAGZ,QCxBA,EA5Be,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUf,EAAe,EAAfA,SAC1B,OACE,gCACE,uBAAKK,UAAU,cACb,uBAAKA,UAAU,YAEjB,qBAAGA,UAAU,WAAWW,KAAK,iBAA7B,mBAGA,uBAAKX,UAAU,QACb,gBAAC,EAAD,CAAQL,SAAUA,IAClB,wBAAMiB,GAAG,eAAeC,SAAS,MAC9BH,GAEH,8BACE,+BAAW,IAAII,MAAOC,cAAtB,wBACA,8DAKT,C,+CCzBD,SAASC,EAAT,GAAgD,IAAD,IAAhCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,MAAOR,EAAY,EAAZA,SACzBS,GAASC,EAAAA,EAAAA,gBAAe,YAAxBD,KAcFE,EAAkBJ,GAAeE,EAAKG,aAAaL,YACnDM,EAAY,UAAGJ,EAAKG,oBAAR,aAAG,EAAmBJ,MAExC,OACE,gCACE,6BAAQK,EAAkBL,EAAN,MAAiBK,EAAiBL,GACtD,wBAAMM,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASP,IACnC,wBAAMQ,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAAS,UAAAN,EAAKG,oBAAL,eAAmBK,SAAnB,KACtC,wBAAMH,KAAK,gBAAgBC,QAASP,IACpC,wBAAMM,KAAK,sBAAsBC,QAASJ,IACzCX,EAGN,CAEDM,EAAIR,aAAe,CACjBS,YAAY,IAQd,K,kGCvBaW,EAAO,kBAClB,gBAAC,IAAD,CACEV,MAAM,OACND,YAAY,kDAHI,EAOpB,UA1BgB,SAAAY,GAAK,OACnB,gBAAC,IAAD,CAAQlC,SAAUkC,EAAMlC,UACtB,uBAAKK,UAAU,QACb,2BAASA,UAAU,oBACjB,kCACA,oDACA,sCACY,qBAAGW,KAAK,+BAAR,oBAEZ,uDACA,0DACA,gEACA,oDACA,4EAba,C","sources":["webpack://nova-larkin-schrage/./src/components/header.js","webpack://nova-larkin-schrage/./src/components/layout.js","webpack://nova-larkin-schrage/./src/components/seo.js","webpack://nova-larkin-schrage/./src/pages/who.js"],"sourcesContent":["import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nconst links = [\n  {\n    text: \"who?\",\n    url: \"/who\",\n  },\n  {\n    text: \"published work\",\n    url: \"/published\",\n  },\n  {\n    text: \"connect\",\n    url: \"/connect\",\n  },\n]\n\nconst Header = ({ location }) => {\n  var { pathname } = location\n  if (pathname.endsWith(\"/\") && pathname.length > 1) {\n    pathname = pathname.substring(0, pathname.length - 1)\n  }\n  return (\n    <header>\n      {pathname !== \"/\" && (\n        <div className=\"home\">\n          <Link to=\"/\">Nova Larkin Schrage</Link>\n        </div>\n      )}\n      <nav>\n        {links.map((link, i) => (\n          <React.Fragment key={link.url}>\n            <Link\n              to={link.url}\n              className=\"nav-link\"\n              ariaCurrent={pathname === location ? \"page\" : false}\n            >\n              <div className=\"nav-link-wrapper\">{link.text}</div>\n            </Link>\n            <span className=\"nav-dots\">\n              {i !== links.length - 1 && <> Â· </>}\n            </span>\n          </React.Fragment>\n        ))}\n      </nav>\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  location: PropTypes.object.isRequired,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import \"@fontsource/adamina\"\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children, location }) => {\n  return (\n    <>\n      <div className=\"background\">\n        <div className=\"nebula\"></div>\n      </div>\n      <a className=\"skip-nav\" href=\"#main-content\">\n        Skip Navigation\n      </a>\n      <div className=\"page\">\n        <Header location={location} />\n        <main id=\"main-content\" tabIndex=\"-1\">\n          {children}\n        </main>\n        <footer>\n          <p>&#169; {new Date().getFullYear()} Nova Larkin Schrage</p>\n          <p>statements not approved by NASA</p>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  location: PropTypes.object.isRequired,\n}\n\nexport default Layout\n","import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst WhoPage = props => (\n  <Layout location={props.location}>\n    <div className=\"main\">\n      <article className=\"memphis-longhand\">\n        <h1>who?</h1>\n        <p>what: mad disabled poet</p>\n        <p>\n          anaphora: <a href=\"https://en.pronouns.page/co\">co/cos pronouns</a>\n        </p>\n        <p>gender: trans & non-binary</p>\n        <p>from: middle of turtle island</p>\n        <p>ancestrally from: germany & belgium</p>\n        <p>living: with difficulty</p>\n        <p>current location: west coast of turtle island</p>\n      </article>\n    </div>\n  </Layout>\n)\n\nexport const Head = () => (\n  <Seo\n    title=\"who?\"\n    description=\"who is Nova Larkin Schrage? click to find out!\"\n  />\n)\n\nexport default WhoPage\n"],"names":["links","text","url","Header","location","pathname","endsWith","length","substring","className","Link","to","map","link","i","key","ariaCurrent","defaultProps","siteTitle","children","href","id","tabIndex","Date","getFullYear","Seo","description","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author","Head","props"],"sourceRoot":""}